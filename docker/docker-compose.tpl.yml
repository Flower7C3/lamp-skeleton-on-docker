version: '2'

services:

  nginx-proxy:
    container_name: proxy
    environment:
      - DEFAULT_HOST=${PROXY_DEFAULT_HOST}
    image: jwilder/nginx-proxy
    networks:
      webserver:
        ipv4_address: ${PROXY_DOCKER_NETWORK_IP}
    ports:
      - "${PROXY_HTTP0_BRIDGED_PORT}:80"
#      - "${PROXY_HTTP1_BRIDGED_PORT}:81"
      - "${PROXY_HTTPS_BRIDGED_PORT}:443"
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - "~/.ssh/:/root/.ssh/"
      - "${VOLUME_PROJECTS}:/var/www/projects/"
      - "${VOLUME_DOMAINS}:/var/www/domains/"
      - "${VOLUME_TOOLS}:/var/www/tools/"

  mysql55:
    build:
      context: ./container/mysql55/
      dockerfile: Dockerfile
    container_name: mysql55
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL55_ROOT_PASSWORD}
      PHP55_IP: ${PHP55_DOCKER_NETWORK_IP}
      PHP56_IP: ${PHP56_DOCKER_NETWORK_IP}
      PHP70_IP: ${PHP70_DOCKER_NETWORK_IP}
    expose:
      - "3306"
    image: flower7c3:mysql55
    networks:
      webserver:
        ipv4_address: ${MYSQL55_DOCKER_NETWORK_IP}
    ports:
      - "${MYSQL55_BRIDGED_PORT}:3306"
    restart: always
    volumes:
      - "${VOLUME_PROJECTS}:/var/www/projects/"
      - "${VOLUME_DOMAINS}:/var/www/domains/"
      - "${VOLUME_TOOLS}:/var/www/tools/"
      - "${VOLUME_ROOT}mysql/mysql55/data/:/var/lib/mysql"

  elastic1:
#    build:
#      context: ./container/php70/
#      dockerfile: Dockerfile
    container_name: elastic1
    dns: ${DNS_IP}
    image: elasticsearch:1
    networks:
      webserver:
        ipv4_address: 192.168.33.121
    ports:
      - "${ELASTICSEARCH1_BRIDGED_PORT}:9200"
#    restart: always
    tty: true
    volumes:
      - "~/.ssh/:/root/.ssh/"
      - "${VOLUME_ROOT}esdata/:/usr/share/elasticsearch/data/"
      - "${VOLUME_PROJECTS}:/var/www/projects/"
      - "${VOLUME_DOMAINS}:/var/www/domains/"
      - "${VOLUME_TOOLS}:/var/www/tools/"

#  elastic2:
#    container_name: elastic2
#    dns: ${DNS_IP}
#    image: elasticsearch:5
#    networks:
#      webserver:
#        ipv4_address: 192.168.33.122
#    ports:
#      - "${ELASTICSEARCH2_BRIDGED_PORT}:9200"
#    tty: true
#    volumes:
#      - "~/.ssh/:/root/.ssh/"
#      - "${VOLUME_ROOT}esdata/:/usr/share/elasticsearch/data/"
#      - "${VOLUME_PROJECTS}:/var/www/projects/"
#      - "${VOLUME_DOMAINS}:/var/www/domains/"
#      - "${VOLUME_TOOLS}:/var/www/tools/"

  php55:
    build:
      context: ./container/php55/
      dockerfile: Dockerfile
    container_name: php55
    dns: ${DNS_IP}
    environment:
      VIRTUAL_HOST: ${PHP55_VIRTUAL_HOSTS}
      XDEBUG_CONFIG: remote_host=${HOST_IPS[1]}
    image: flower7c3:php55
    links:
      - mysql55
      - elastic1
#      - elastic2
    networks:
      webserver:
        ipv4_address: ${PHP55_DOCKER_NETWORK_IP}
    restart: always
    volumes:
      - "~/.ssh/:/root/.ssh/"
      - "${VOLUME_WWW_INDEX}:/var/www/html/"
      - "${VOLUME_PROJECTS}:/var/www/projects/"
      - "${VOLUME_DOMAINS}:/var/www/domains/"
      - "${VOLUME_TOOLS}:/var/www/tools/"

  php56:
    build:
      context: ./container/php56/
      dockerfile: Dockerfile
    container_name: php56
    environment:
      VIRTUAL_HOST: ${PHP56_VIRTUAL_HOSTS}
      XDEBUG_CONFIG: remote_host=${HOST_IPS[1]}
    dns: ${DNS_IP}
    image: flower7c3:php56
    links:
      - mysql55
      - elastic1
#      - elastic2
    networks:
      webserver:
        ipv4_address: ${PHP56_DOCKER_NETWORK_IP}
    restart: always
    volumes:
      - "~/.ssh/:/root/.ssh/"
      - "${VOLUME_WWW_INDEX}:/var/www/html/"
      - "${VOLUME_PROJECTS}:/var/www/projects/"
      - "${VOLUME_DOMAINS}:/var/www/domains/"
      - "${VOLUME_TOOLS}:/var/www/tools/"

  php70:
    build:
      context: ./container/php70/
      dockerfile: Dockerfile
    container_name: php70
    dns: ${DNS_IP}
    environment:
      VIRTUAL_HOST: ${PHP70_VIRTUAL_HOSTS}
      XDEBUG_CONFIG: remote_host=${HOST_IPS[1]}
    image: flower7c3:php70
    links:
      - mysql55
      - elastic1
#      - elastic2
    networks:
      webserver:
        ipv4_address: ${PHP70_DOCKER_NETWORK_IP}
    restart: always
    volumes:
      - "~/.ssh/:/root/.ssh/"
      - "${VOLUME_WWW_INDEX}:/var/www/html/"
      - "${VOLUME_PROJECTS}:/var/www/projects/"
      - "${VOLUME_DOMAINS}:/var/www/domains/"
      - "${VOLUME_TOOLS}:/var/www/tools/"

  yarn:
    build:
      context: ./container/yarn/
      dockerfile: Dockerfile
    container_name: yarn
    dns: ${DNS_IP}
    ports:
      - "${YARN_BRIDGED_PORT}:8080"
    image: flower7c3:yarn
    networks:
      webserver:
        ipv4_address: ${YARN_DOCKER_NETWORK_IP}
#    restart: always
    tty: true
    volumes:
      - "${VOLUME_PROJECTS}:/var/www/projects/"
      - "${VOLUME_DOMAINS}:/var/www/domains/"
      - "${VOLUME_TOOLS}:/var/www/tools/"

  node4:
    build:
      context: ./container/node4/
      dockerfile: Dockerfile
    container_name: node4
    dns: ${DNS_IP}
    ports:
      - "${NODE4_BRIDGED_PORT}:8080"
    image: flower7c3:node4
    networks:
      webserver:
        ipv4_address: ${NODE4_DOCKER_NETWORK_IP}
#    restart: always
    tty: true
    volumes:
      - "${VOLUME_PROJECTS}:/var/www/projects/"
      - "${VOLUME_DOMAINS}:/var/www/domains/"
      - "${VOLUME_TOOLS}:/var/www/tools/"

  node5:
    build:
      context: ./container/node5/
      dockerfile: Dockerfile
    container_name: node5
    dns: ${DNS_IP}
    ports:
      - "${NODE5_BRIDGED_PORT}:8080"
    image: flower7c3:node5
    networks:
      webserver:
        ipv4_address: ${NODE5_DOCKER_NETWORK_IP}
#    restart: always
    tty: true
    volumes:
      - "${VOLUME_PROJECTS}:/var/www/projects/"
      - "${VOLUME_DOMAINS}:/var/www/domains/"
      - "${VOLUME_TOOLS}:/var/www/tools/"

networks:

  webserver:
    driver: bridge
    driver_opts:
      name: compose_webserver
      # com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
      config:
      - subnet: 192.168.33.0/24
        gateway: 192.168.33.254
